export const id=()=>Math.random().toString(36).substring(2,9),getRandomName=()=>{let t="James;Robert;John;Michael;David;William;Richard;Joseph;Thomas;Charles;Christopher;Daniel;Matthew;Anthony;Mark;Donald;Steven;Paul;Andrew;Joshua;Kenneth;Kevin;Brian;George;Timothy;Ronald;Edward;Jason;Jeffrey;Ryan;Jacob;Gary;Nicholas;Eric;Jonathan;Stephen;Larry;Justin;Scott;Brandon;Benjamin;Samuel;Gregory;Alexander;Frank;Patrick;Raymond;Jack;Dennis;Jerry;Tyler;Aaron;Jose;Adam;Nathan;Henry;Douglas;Zachary;Peter;Kyle;Ethan;Walter;Noah;Jeremy;Christian;Keith;Roger;Terry;Gerald;Harold;Sean;Austin;Carl;Arthur;Lawrence;Dylan;Jesse;Jordan;Bryan;Billy;Joe;Bruce;Gabriel;Logan;Albert;Willie;Alan;Juan;Wayne;Elijah;Randy;Roy;Vincent;Ralph;Eugene;Russell;Bobby;Mason;Philip;Louis".split(";");return t[Math.floor(Math.random()*t.length)]},defined=t=>null!=t;export class GameLoop{constructor(t,i=60){var e,s=1e3/i,r=null,o=-1,h=t;function n(t){null===r&&(r=t);var i=Math.floor((t-r)/s);i>o&&h({time:t,frame:o=i}),e=requestAnimationFrame(n)}this.isPlaying=!1,this.frameRate=function(t){if(!arguments.length)return i;s=1e3/(i=t),o=-1,r=null},this.start=function(){this.isPlaying||(this.isPlaying=!0,e=requestAnimationFrame(n))},this.pause=function(){this.isPlaying&&(cancelAnimationFrame(e),this.isPlaying=!1,r=null,o=-1)}}}let workingWorld={};const eventify=t=>{t.events={},t.on=function(i,e){"object"!=typeof t.events[i]&&(t.events[i]=[]),t.events[i].push(e)},t.removeListener=function(i,e){let s;"object"==typeof t.events[i]&&(s=t.events[i].indexOf(e),s>-1&&t.events[i].splice(s,1))},t.emit=function(i){var e,s,r,o=[].slice.call(arguments,1);if("object"==typeof t.events[i])for(r=(s=t.events[i].slice()).length,e=0;e<r;e++)s[e].apply(t,o)},t.once=function(i,e){t.on(i,(function s(){t.removeListener(i,s),e.apply(t,arguments)}))}};export class World{constructor(t={canvas:null,doc:document,G:{x:0,y:.001},pattern:"color",background:"#000",color:"#fff",size:{width:window.innerWidth,height:window.innerHeight},hasLimits:!0,tag:"map",border:{width:1,background:"#000",pattern:"color"},sprites:{},onmousemove:null,onclick:null,onmouseup:null,rotation:0,paused:!1,createWorld:!0}){if(eventify(this),this.canvas=t.canvas||null,this.createWorld=!defined(t.createWorld)||t.createWorld,this.doc=t.doc||document,this.G=t.G||{x:0,y:.001},this.pattern=t.pattern||"color",this.background=t.background||"#000",this.color=t.color||"#fff",this.size=t.size||{width:window.innerWidth,height:window.innerHeight},this.hasLimits=void 0===this.hasLimits||this.hasLimits,this.tag=this.tag||"map",this.border=t.border||{width:0,background:"#000",pattern:"color"},this.sprites=this.sprites||{},this.G=t.G||{x:0,y:.001},this.Objects=[],this.keys={},this.set=(t,i)=>{this[t]=i},this.responsive=void 0===t.responsive||t.responsive,this.paused=void 0!==t.paused&&t.paused,this.rotation=void 0!==t.rotation?t.rotation:0,this.borderY={type:"rectangle",pattern:this.border.pattern,background:this.border.background,width:this.border.width,height:this.height,x:0,y:0,tag:"border",border:this.border},this.borderX={type:"rectangle",pattern:this.border.pattern,background:this.border.background,width:this.width,height:this.border.width,x:0,y:0,tag:"border",border:this.border},this.borderYW={type:"rectangle",pattern:this.border.pattern,background:this.border.background,width:this.border.width,height:this.height,x:this.width-this.border.width,y:0,tag:"border",border:this.border},this.borderXW={type:"rectangle",pattern:this.border.pattern,background:this.border.background,width:this.width,height:this.border.width,x:0,y:this.height-this.border.width,tag:"border",name:"borderXW",border:this.border},!0===this.createWorld){if(this.canvas||(this.canvas=this.doc.createElement("canvas"),this.canvas.width=this.size.width,this.canvas.height=this.size.height,this.doc.body.appendChild(this.canvas)),this.responsive){window.addEventListener("resize",(()=>{this.width=window.innerWidth,this.height=window.innerHeight,this.canvas.width=this.width,this.canvas.height=this.height}))}this.hasLimits&&[this.borderX,this.borderY,this.borderXW,this.borderYW].forEach((t=>{this.register(new Shape({...t,physics:!1}))})),this.onLoad=t=>window.addEventListener("load",t),this.doc.addEventListener("keydown",(t=>{this.keys[t.key]=!0})),this.doc.addEventListener("keyup",(t=>{this.keys[t.key]=!1})),this.tag=this.tag||"map",Object.keys(this.sprites).forEach(((t,i)=>{this.sprites[t]={},this.sprites[t].image=new Image,this.sprites[t].image.src=this.sprites[t].src,this.sprites[t].image.decode().then((()=>{this.sprites[t].width=this.sprites[t].image.width,this.sprites[t].height=this.sprites[t].image.height}))})),this.mouse={x:0,y:0},this.canvas.addEventListener("mousemove",(t=>{this.mouse.x=t.offsetX,this.mouse.y=t.offsetY})),this.mousedown=t.mousedown||(()=>{}),this.mouseup=t.mouseup||(()=>{}),this.mousemove=t.mousemove||(()=>{}),this.canvas.addEventListener("mousedown",(t=>this.mousedown(t))),this.canvas.addEventListener("mouseup",(t=>this.mouseup(t))),this.canvas.addEventListener("mousemove",(t=>this.mousemove(t))),this.emit("load"),workingWorld=this,this.ctx=this.canvas.getContext("2d"),this.width=this.canvas.width,this.height=this.canvas.height}}key={isPressed:t=>this.keys[t]};destroy(){this.canvas.remove(),this.Objects=[]}register(t){this.Objects.push(t)}unregister(t){this.Objects.forEach(((i,e)=>i.id===t.id&&this.Objects.splice(e,1)))}center(t,i=!1){t.x=this.canvas.width/2,t.y=this.canvas.height/2,i&&(t.velocity={x:0,y:0})}centerX(t,i=!1){t.x=this.canvas.width/2,i&&(t.velocity={x:0,y:0})}centerY(t,i=!1){t.y=this.canvas.height/2,i&&(t.velocity={x:0,y:0})}draw(t){switch(t.type=t.type||"rectangle",t.background=t.background||"#000",t.pattern=t.pattern||"color",t.radius=t.radius||void 0,t.width=t.radius||2*t.width||50,t.height=t.radius||2*t.height||50,t.x=void 0!==t.x?t.x:this.canvas.width/2,t.y=void 0!==t.y?t.y:this.canvas.height/2,t.rotation=void 0!==t.rotation?t.rotation:0,t.x1=void 0!==t.x1?t.x1:t.x,t.y1=void 0!==t.y1?t.y1:t.y,t.x2=void 0!==t.x2?t.x2:t.x,t.y2=void 0!==t.y2?t.y2:t.y,this.ctx.save(),this.ctx.translate(t.x,t.y),this.ctx.rotate(t.rotation),t.type){case"rectangle":switch(t.pattern){case"color":this.ctx.fillStyle=t.background,this.ctx.fillRect(t.x,t.y,t.width,t.height);break;case"image":this.ctx.drawImage(t.image,-t.width/2,-t.height/2,t.width,t.height)}break;case"circle":case"dot":switch(t.pattern){case"color":this.ctx.fillStyle=t.background,this.ctx.beginPath(),this.ctx.arc(0,0,t.radius,0,2*Math.PI),this.ctx.fill();break;case"image":this.ctx.drawImage(t.image,-t.radius,-t.radius,2*t.radius,2*t.radius)}break;case"line":this.ctx.strokeStyle=t.background,this.ctx.lineWidth=t.width,this.ctx.beginPath(),this.ctx.moveTo(t.x1-workingWorld.width/2,t.y1-workingWorld.height/2),this.ctx.lineTo(t.x2-workingWorld.width/2,t.y2-workingWorld.height/2),this.ctx.stroke()}this.ctx.restore()}collision(t,i){return t.x<i.x+i.width&&t.x+t.width>i.x&&t.y<i.y+i.height&&t.y+t.height>i.y}isTouchingLimits(t){return t.x+t.width>0&&t.x<workingWorld.width&&t.y+t.height>0&&t.y<workingWorld.height}getElementsByTagName(t){return this.Objects.filter((i=>i.tag===t))}getElementByTagName(t){return this.Objects.find((i=>i.tag===t))}getElementsByName(t){return this.Objects.filter((i=>i.name===t))}getElementByName(t){return this.Objects.find((i=>i.name===t))}getElementsByType(t){return this.Objects.filter((i=>i.type===t))}preventCollision(t,i){if("object"==typeof i&&i instanceof Array)i.forEach((i=>t.isBody&&i.isBody&&this.preventCollision(t,i)));else if(t.id!==i.id&&this.collision(t,i)){switch("border"!==t.tag&&"border"!==i.tag&&(t.CCHas(i)||(t.onCollision(i,t),i.onCollision(t,i),t.collideWith(i),i.collideWith(t))),t.cacheDirection){case"down":t.y+t.height>i.y&&(t.y=i.y-t.height,t.velocity.x=t.velocity.x*t.friction);break;case"up":t.y<i.y+i.height&&(t.y=i.y+i.height,t.velocity.x=t.velocity.x*t.friction);break;case"left":t.x<i.x+i.width&&(t.x=i.x+i.width);break;case"right":t.x+t.width>i.x&&(t.x=i.x-t.width)}if(t.physics)switch(t.cacheDirection){case"left":case"right":var e=~~(-t.velocity.x*t.rebound);t.velocity.x=e;break;case"up":case"down":e=~~(-t.velocity.y*t.rebound);t.velocity.y=e,t.cacheDirection=t.velocity.y<0?"down":"up",0===e&&(t.cacheDirection="down")}}else!this.collision(t,i)&&i.CCHas(t)&&(t.finishCollideWith(i),i.finishCollideWith(t),t.onFinishCollision(i,t),i.onFinishCollision(t,i))}update(t=null){if(!this.paused){switch(this.ctx.clearRect(0,0,this.width,this.height),this.pattern){case"color":this.draw({pattern:"color",background:this.background,x:0,y:0,width:this.width,height:this.height});break;case"image":this.draw({pattern:"image",image:this.background.image,x:0,y:0,width:this.width,height:this.height})}t&&t(),this.Objects=this.Objects.sort(((t,i)=>t.zIndex-i.zIndex)),this.Objects=this.Objects.sort(((t,i)=>"wall"===t.tag?-1:1)),this.Objects.forEach((t=>{if(t.physics){if(this.getElementsByType("border").some((i=>this.collision(t,i))))switch(t.velocity.y=0,t.velocity.x=0,t.cacheDirection){case"down":t.cacheDirection="up";break;case"up":break;case"left":t.cacheDirection="right";break;case"right":t.cacheDirection="left"}else t.velocity.x+=this.G.x,t.velocity.y+=this.G.y;t.x+=t.velocity.x,t.y+=t.velocity.y,t.cacheDirection=t.velocity.x<0?"right":"left",t.cacheDirection=t.velocity.y<0?"up":"down",workingWorld.preventCollision(t,workingWorld.Objects)}t.draw()}))}}pause(){this.paused=!0}resume(){this.paused=!1}getCursorPosition(){return{x:this.mouse.x,y:this.mouse.y}}generateMap(t,i){let e={};return t.forEach(((s,r)=>{s.split("").forEach(((o,h)=>{const n=s.length;i[o]&&(e[o]||(e[o]=[]),e[o].push(i[o]({mapWidth:workingWorld.width,mapHeight:workingWorld.height,x:h*(workingWorld.width/n),y:r*(workingWorld.height/t.length),width:workingWorld.width/n,height:workingWorld.height/t.length,Cindex:h,Lindex:r})))}))})),e}HoveredObjects(){return workingWorld.Objects.filter((t=>t.x<this.mouse.x&&t.x+t.width>this.mouse.x&&t.y<this.mouse.y&&t.y+t.height>this.mouse.y))}getEmptySpace(t){const i=[];let e=[];this.Objects.forEach((t=>{"border"!==t.tag&&"emptySpace"!==t.tag&&"player"!==t.tag&&e.push({x:t.x,y:t.y,width:t.width,height:t.height})})),t&&e.forEach((i=>{i.x===t.x&&i.y===t.y&&e.splice(e.indexOf(i),1)})),e.forEach((t=>{const e=t.x,s=t.y,r=e+t.width,o=s+t.height,h={start:e,end:r},n={start:e,end:r},a={start:s,end:o},d={start:s,end:o};i.push(h),i.push(n),i.push(a),i.push(d)})),i.sort(((t,i)=>t.start-i.start))}oncePressed(t,i){window.addEventListener("keyup",(e=>{e.key===t&&i()}))}}export class Shape{constructor(t={type:"rectangle",x:0,y:0,width:10,height:10,zIndex:0,isBody:!0,pattern:"color",background:"",rotation:0,name:getRandomName(),tag:"unknown",onCollision:(t,i)=>console.log("Collided with:",i.name),onFinishCollision:(t,i)=>console.log("Finished colliding with:",i.name),physics:!0,rebound:.9,friction:.5,id:id(),speed:3,velocity:{x:0,y:0},border:{background:"blue",width:2},animate:!0,flip:[]},i=!1){if(!workingWorld)throw new Error("BrainError: No world is initialized!");return eventify(this),this.type=t.type||"rectangle",this.zIndex=defined(t.zIndex)?t.zIndex:0,this.flip=defined(t.flip)?t.flip:[],this.background=t.color||"black",this.x=t.x||0,this.y=t.y||0,this.radius=t.radius,void 0!==this.radius?(this.width=this.radius,this.height=this.radius):(this.width=t.width||10,this.height=t.height||10),this.isBody=void 0===t.isBody||t.isBody,this.animate=void 0===t.animate||t.animate,this.pattern=t.pattern||"color",this.background=t.background||"",this.rotation=t.rotation||0,this.name=t.name||getRandomName(),this.tag=t.tag||"unknown",this.onCollision=t.onCollision||(()=>{}),this.onFinishCollision=t.onFinishCollision||(()=>{}),this.collitionObjects=[],this.physics=void 0===t.physics||t.physics,this.rebound=void 0!==t.rebound?t.rebound:.9,this.friction=void 0!==t.friction?t.friction:.5,this.border=void 0!==t.border?t.border:{background:"transparent",width:0},this.id=id(),this.cacheDirection="up",this.speed=t.speed||3,this.velocity=t.velocity||{x:0,y:0},workingWorld.register&&!i&&workingWorld.register(this),this}collideWith(t){this.collitionObjects.push(t)}finishCollideWith(t){this.collitionObjects.forEach(((i,e)=>i.id===t.id&&this.collitionObjects.splice(e,1)))}rotate(t){this.rotation+=t}setRotation(t){this.rotation=t}draw(){switch(this.flip.includes("x")&&(workingWorld.ctx.scale(-1,1),workingWorld.ctx.translate(-this.width,0)),this.flip.includes("y")&&(workingWorld.ctx.scale(1,-1),workingWorld.ctx.translate(0,-this.height)),this.type){case"rectangle":if("color"===this.pattern&&(workingWorld.ctx.fillStyle=this.background,workingWorld.ctx.fillRect(this.x,this.y,this.width,this.height)),"gradient"===this.pattern){if(!this.background.gradientSettings)throw new Error("ArgumentError: No gradient settings found!");if(!this.background.gradientSettings.startColor)throw new Error("ArgumentError: No start color found!");if(!this.background.gradientSettings.endColor)throw new Error("ArgumentError: No end color found!");let t=workingWorld.ctx.createGradient(this.background.gradientSettings);t.addColorStop(0,this.background.gradientStart),t.addColorStop(1,this.background.gradientEnd)}if("image"===this.pattern){if(!this.background.image)throw new Error("ArgumentError: No image found!");var t=workingWorld.ctx;t.save(),t.translate(this.x+this.width,this.y+this.height),t.rotate(this.rotation*Math.PI/180),t.drawImage(this.background.image,-this.width,-this.height,this.width,this.height),t.restore(),workingWorld.ctx.setTransform(1,0,0,1,0,0)}break;case"circle":workingWorld.ctx.beginPath(),workingWorld.ctx.arc(this.x+this.width/2,this.y+this.height/2,this.width/2,0,2*Math.PI),workingWorld.ctx.fillStyle=this.pattern||this.background,workingWorld.ctx.fill();break;case"line":workingWorld.ctx.beginPath(),workingWorld.ctx.moveTo(this.x,this.y),workingWorld.ctx.lineTo(this.x+this.width,this.y+this.height),workingWorld.ctx.strokeStyle=this.pattern||this.background,workingWorld.ctx.stroke();break;case"image":workingWorld.ctx.drawImage(this.image,this.x,this.y,this.width,this.height)}if(this.border){workingWorld.ctx.strokeStyle=this.border.background;var i=workingWorld.ctx.lineWidth;workingWorld.ctx.lineWidth=this.border.width,workingWorld.ctx.strokeRect(this.x,this.y,this.width,this.height),workingWorld.ctx.lineWidth=i}workingWorld.ctx.setTransform(1,0,0,1,0,0)}remove(){workingWorld.unregister(this)}result(){return this}isOutOfMap(){return this.x<0||this.x>workingWorld.width||this.y<0||this.y>workingWorld.height}isOutOfRange(t){return this.x<t.start||this.x>t.end||this.y<t.start||this.y>t.end}get(t){return this[t]}set(t,i){return this[t]=i,this}move(t,i=null,e=!1){this.cacheDirection=t;var s=null!==i?i:this.speed;switch(t){case"up":this.y-=s;break;case"down":this.y+=s;break;case"left":this.x-=s;break;case"right":this.x+=s}workingWorld.preventCollision(this,workingWorld.Objects)}follow(t){const i=t.x-this.x,e=t.y-this.y,s=Math.atan2(e,i);this.velocity.x=Math.cos(s)*this.speed,this.velocity.y=Math.sin(s)*this.speed;let r="";this.velocity.x>0&&(r+=" right"),this.velocity.x<0&&(r+=" left"),this.velocity.y>0&&(r+=" down"),this.velocity.y<0&&(r+=" up"),r=r.substring(1),r.split(" ").forEach((t=>this.move(t))),workingWorld.preventCollision(this,workingWorld.Objects)}onCollide(t){return this.onCollision=t,this}isCollidingWith(t){return workingWorld.collision(this,t)}CCHas(t){var i=!1;return this.collitionObjects.forEach((e=>{e.id===t.id&&(i=!0)})),i}jump(t){this.velocity.y=-t}}export class Animation{constructor(t,i=100,...e){if(!t)throw new Error("ArgumentError: No target found!");if(!e||!e.length)throw new Error("ArgumentError: No frames found!");this.target=t,this.speed=i||100,this.frames=e,this.currentFrame=0,this.isPlaying=!0,setInterval((()=>{if(this.isPlaying){if(this.currentFrame++,this.currentFrame>=this.frames.length&&(this.currentFrame=0),"image"!==t.pattern)throw new Error("ArgumentError: Target must be an image!");t.background.image=this.frames[this.currentFrame]}}),this.speed)}start(){this.isPlaying=!0}stop(){this.isPlaying=!1}}export function Text(t){switch(t.text=t.text||"",t.background=t.background||"white",t.font=t.font||"Arial",t.size=t.size||"20px",t.x=t.x||0,t.y=t.y||0,t.type=t.type||"fill",t.y=t.y+t.size.split("px")[0]/2,workingWorld.ctx.font=t.size+" "+t.font,t.type){case"fill":workingWorld.ctx.fillStyle=t.background,workingWorld.ctx.fillText(t.text,t.x,t.y);break;case"stroke":workingWorld.ctx.strokeStyle=t.background,workingWorld.ctx.strokeText(t.text,t.x,t.y)}}export function LoadImage(t){return new Promise(((i,e)=>{const s=new Image;s.onload=()=>i(s),s.src=t}))}export function LoadAudio(t){return new Promise(((i,e)=>{const s=new Audio;s.src=t,i(s)}))}export async function spritesBETA(t){for(let i in t)workingWorld.sprites[i]=await image(t[i])}
